
import math
import matplotlib.pyplot as plt


class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
    PINK = '\033[38;5;206m'
    PURPLE = '\033[38;5;135m'
    WHITE = '\033[38;5;15m'


def simpsons_rule(f, a, b, n):
    if n % 2 != 0:
        raise ValueError("Number of subintervals (n) must be even for Simpson's Rule.")

    h = (b - a) / n
    integral = f(a) + f(b)

    for i in range(1, n):
        x_i = a + i * h
        if i % 2 == 0:
            integral += 2 * f(x_i)
        else:
            integral += 4 * f(x_i)

    return integral * (h / 3)


if __name__ == '__main__':
    # Define the function and bounds
    f = lambda x: math.exp(x ** 2)
    a, b = 0, 1
    n = 10

    print(f"{bcolors.WHITE}Division into n={n} sections{bcolors.ENDC}")

    # Perform integration
    integral = simpsons_rule(f, a, b, n)
    print(bcolors.PINK + f"Numerical Integration of definite integral in range [{a}, {b}] = {integral}" + bcolors.ENDC)

    # Plot the function
    x_vals = [a + i * (b - a) / 1000 for i in range(1001)]
    y_vals = [f(x) for x in x_vals]
    plt.plot(x_vals, y_vals, label="f(x) = exp(x^2)", color="blue")
    plt.fill_between(x_vals, y_vals, where=[a <= x <= b for x in x_vals], color="lightblue", alpha=0.4)
    plt.title("Integration of f(x) = exp(x^2)")
    plt.xlabel("x")
    plt.ylabel("f(x)")
    plt.legend()
    plt.show()
